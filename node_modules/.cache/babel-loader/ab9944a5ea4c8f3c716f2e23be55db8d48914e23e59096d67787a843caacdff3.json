{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FrontEndReact\\\\myappreact\\\\src\\\\Components\\\\ParentChild\\\\childDataBaru.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChildDataBaru(props) {\n  _s();\n  $.DataTable = require('datatables.net');\n  const tableRef = useRef();\n  useEffect(() => {\n    console.log(tableRef.current);\n    const table = $(tableRef.current).DataTable({\n      data: props.data,\n      columns: [{\n        title: \"no\"\n      }, {\n        title: \"emp_id\"\n      }, {\n        title: \"emp_fullname\"\n      }, {\n        title: \"Sisa Cuti\"\n      }],\n      destroy: true // I think some clean up is happening here\n    });\n    // Extra step to do extra clean-up.\n    return function () {\n      console.log(\"Table destroyed\");\n      table.destroy();\n    };\n  }, [props.data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"display\",\n      width: \"100%\",\n      ref: tableRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(ChildDataBaru, \"bWlprO2XjxYAJuwJTuIAPnZ59fk=\");\n_c = ChildDataBaru;\nvar _c;\n$RefreshReg$(_c, \"ChildDataBaru\");","map":{"version":3,"names":["React","useEffect","useRef","$","ChildDataBaru","props","DataTable","require","tableRef","console","log","current","table","data","columns","title","destroy"],"sources":["C:/Users/User/FrontEndReact/myappreact/src/Components/ParentChild/childDataBaru.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\"\r\nimport $ from 'jquery'\r\n \r\nexport default function ChildDataBaru(props) {\r\n \r\n$.DataTable = require('datatables.net')\r\nconst tableRef = useRef()\r\n \r\nuseEffect(() => {\r\n    console.log(tableRef.current)\r\n    const table = $(tableRef.current).DataTable(\r\n        {\r\n            data: props.data,\r\n                columns: [\r\n                    { title: \"no\"},\r\n                    { title: \"emp_id\"},\r\n                    { title: \"emp_fullname\"},\r\n                    { title: \"Sisa Cuti\"}\r\n                ],\r\n                destroy: true  // I think some clean up is happening here\r\n        }\r\n    )\r\n    // Extra step to do extra clean-up.\r\n    return function() {\r\n        console.log(\"Table destroyed\")\r\n        table.destroy()\r\n    }\r\n},[props.data])\r\n    return (\r\n        <div>\r\n            <table className=\"display\" width=\"100%\" ref={ tableRef }></table>\r\n        </div>\r\n         \r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,CAAC,MAAM,QAAQ;AAAA;AAEtB,eAAe,SAASC,aAAa,CAACC,KAAK,EAAE;EAAA;EAE7CF,CAAC,CAACG,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;EACvC,MAAMC,QAAQ,GAAGN,MAAM,EAAE;EAEzBD,SAAS,CAAC,MAAM;IACZQ,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,OAAO,CAAC;IAC7B,MAAMC,KAAK,GAAGT,CAAC,CAACK,QAAQ,CAACG,OAAO,CAAC,CAACL,SAAS,CACvC;MACIO,IAAI,EAAER,KAAK,CAACQ,IAAI;MACZC,OAAO,EAAE,CACL;QAAEC,KAAK,EAAE;MAAI,CAAC,EACd;QAAEA,KAAK,EAAE;MAAQ,CAAC,EAClB;QAAEA,KAAK,EAAE;MAAc,CAAC,EACxB;QAAEA,KAAK,EAAE;MAAW,CAAC,CACxB;MACDC,OAAO,EAAE,IAAI,CAAE;IACvB,CAAC,CACJ;IACD;IACA,OAAO,YAAW;MACdP,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BE,KAAK,CAACI,OAAO,EAAE;IACnB,CAAC;EACL,CAAC,EAAC,CAACX,KAAK,CAACQ,IAAI,CAAC,CAAC;EACX,oBACI;IAAA,uBACI;MAAO,SAAS,EAAC,SAAS;MAAC,KAAK,EAAC,MAAM;MAAC,GAAG,EAAGL;IAAU;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QAC/D;AAGd;AAAC,GA/BuBJ,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}